@model ComputerReparatieshop.Web.Models.Order_Edit
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Order.EmployeeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Order." + nameof(Model.Order.EmployeeId), new SelectList(Model.Employees.Distinct().ToList(), "Id", "Name", Model.Order.EmployeeId), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Order.EmployeeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Order.CustomerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Order." + nameof(Model.Order.CustomerId), new SelectList(Model.Customers.Distinct().ToList(), "Id", "Name", Model.Order.CustomerId), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Order.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Order.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Order.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Order.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Order.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Order.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Order.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--
        <div class="form-group">
            Html.LabelFor(model => model.Order.StatusId, htmlAttributes: new { class = "control-label col-md-2" })
            <div class="col-md-10">
                Html.EditorFor(model => model.Order.StatusId, new { htmlAttributes = new { class = "form-control" } })
                Html.ValidationMessageFor(model => model.Order.StatusId, "", new { class = "text-danger" })
            </div>
        </div>
        -->

        <div class="form-group">
            @Html.LabelFor(model => model.Order.Discription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Order.Discription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Order.Discription, "", new { @class = "text-danger" })
            </div>
        </div>

        `<!--
        <div class="form-group">
            Html.LabelFor(model => model.ToDo, htmlAttributes: new { class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    Html.EditorFor(model => model.ToDo)
                    Html.ValidationMessageFor(model => model.ToDo, "", new { class = "text-danger" })
                </div>
            </div>
        </div>
        -->

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
